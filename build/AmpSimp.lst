ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"AmpSimp.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "AmpSimp.cpp"
  19              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  20              		.align	1
  21              		.p2align 2,,3
  22              		.weak	_ZN5daisy9DaisySeedD2Ev
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_ZN5daisy9DaisySeedD2Ev:
  28              	.LVL0:
  29              	.LFB2359:
  30              		.file 2 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  31              		.loc 2 22 5 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.LBB52:
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 2


  37              	.LBI52:
  38              		.file 3 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 3


  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  39              		.loc 3 97 5 view .LVU1
  40              		.loc 3 97 5 is_stmt 0 view .LVU2
  41              	.LBE52:
  42              	.LBB53:
  43              	.LBI53:
  44              		.file 4 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 4


  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  45              		.loc 4 42 5 is_stmt 1 view .LVU3
  46              		.loc 4 42 5 is_stmt 0 view .LVU4
  47              	.LBE53:
  48              	.LBB54:
  49              	.LBI54:
  50              		.file 5 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 5


  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 6


  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  51              		.loc 5 110 5 is_stmt 1 view .LVU5
  52              		.loc 5 110 5 is_stmt 0 view .LVU6
  53              	.LBE54:
  54              	.LBB55:
  55              	.LBI55:
  56              		.file 6 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 7


  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 8


  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  57              		.loc 6 96 5 is_stmt 1 view .LVU7
  58              		.loc 6 96 5 is_stmt 0 view .LVU8
  59              	.LBE55:
  60              		.loc 2 22 19 view .LVU9
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE2359:
  65              		.weak	_ZN5daisy9DaisySeedD1Ev
  66              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  67 0002 00BF     		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
  68              		.align	1
  69              		.p2align 2,,3
  70              		.global	_Z13AudioCallbackPKfPfj
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_Z13AudioCallbackPKfPfj:
  76              	.LVL1:
  77              	.LFB4674:
   1:AmpSimp.cpp   **** #include "daisy_seed.h"
   2:AmpSimp.cpp   **** 
   3:AmpSimp.cpp   **** // #define USE_DAISYSP_LGPL
   4:AmpSimp.cpp   **** #include "daisysp.h"
   5:AmpSimp.cpp   **** 
   6:AmpSimp.cpp   **** using namespace daisy;
   7:AmpSimp.cpp   **** using namespace daisysp;
   8:AmpSimp.cpp   **** 
   9:AmpSimp.cpp   **** enum ButtonsCodes {
  10:AmpSimp.cpp   **** 
  11:AmpSimp.cpp   ****     Toggle4 = 7,
  12:AmpSimp.cpp   ****     Toggle3 = 8,
  13:AmpSimp.cpp   ****     Toggle2 = 9,
  14:AmpSimp.cpp   ****     Toggle1 = 10,
  15:AmpSimp.cpp   **** 
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 9


  16:AmpSimp.cpp   ****     Knob1 = 16, 
  17:AmpSimp.cpp   ****     Knob2 = 17, 
  18:AmpSimp.cpp   ****     Knob3 = 18, 
  19:AmpSimp.cpp   ****     Knob4 = 19, 
  20:AmpSimp.cpp   ****     Knob5 = 20, 
  21:AmpSimp.cpp   ****     Knob6 = 21, 
  22:AmpSimp.cpp   **** 
  23:AmpSimp.cpp   ****     LED1 = 22,
  24:AmpSimp.cpp   ****     LED2 = 23,
  25:AmpSimp.cpp   ****     
  26:AmpSimp.cpp   ****     FS1 = 25,
  27:AmpSimp.cpp   ****     FS2 = 26,
  28:AmpSimp.cpp   **** };
  29:AmpSimp.cpp   **** 
  30:AmpSimp.cpp   **** DaisySeed  hardware;
  31:AmpSimp.cpp   **** 
  32:AmpSimp.cpp   **** // OnePole dans DaisySP/Source/Filters
  33:AmpSimp.cpp   **** // Biquad dans
  34:AmpSimp.cpp   **** 
  35:AmpSimp.cpp   **** 
  36:AmpSimp.cpp   **** struct DSPData {
  37:AmpSimp.cpp   **** 
  38:AmpSimp.cpp   ****     // int placeholder
  39:AmpSimp.cpp   ****     
  40:AmpSimp.cpp   ****     struct {
  41:AmpSimp.cpp   ****     
  42:AmpSimp.cpp   ****     } gate;
  43:AmpSimp.cpp   ****     
  44:AmpSimp.cpp   ****     struct {
  45:AmpSimp.cpp   ****     
  46:AmpSimp.cpp   ****     } preamp;
  47:AmpSimp.cpp   ****     
  48:AmpSimp.cpp   ****     struct {
  49:AmpSimp.cpp   ****     
  50:AmpSimp.cpp   ****     } tonestack;
  51:AmpSimp.cpp   **** 
  52:AmpSimp.cpp   ****     struct {
  53:AmpSimp.cpp   **** 
  54:AmpSimp.cpp   ****     } irloader;
  55:AmpSimp.cpp   **** 
  56:AmpSimp.cpp   **** } dsp_data;
  57:AmpSimp.cpp   **** 
  58:AmpSimp.cpp   **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  59:AmpSimp.cpp   ****                    AudioHandle::InterleavingOutputBuffer out,
  60:AmpSimp.cpp   ****                    size_t                                size)
  61:AmpSimp.cpp   **** {
  78              		.loc 1 61 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  62:AmpSimp.cpp   ****     //Fill the block with samples
  63:AmpSimp.cpp   ****     for(size_t i = 0; i < size; i += 2)
  83              		.loc 1 63 5 view .LVU11
  84              		.loc 1 63 25 discriminator 1 view .LVU12
  64:AmpSimp.cpp   ****     {
  65:AmpSimp.cpp   ****  
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 10


  66:AmpSimp.cpp   ****     }
  67:AmpSimp.cpp   **** }
  85              		.loc 1 67 1 is_stmt 0 view .LVU13
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE4674:
  90 0002 00BF     		.section	.text.startup.main,"ax",%progbits
  91              		.align	1
  92              		.p2align 2,,3
  93              		.global	main
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  98              	main:
  99              	.LFB4675:
  68:AmpSimp.cpp   **** 
  69:AmpSimp.cpp   **** 
  70:AmpSimp.cpp   **** int main(void)
  71:AmpSimp.cpp   **** {
 100              		.loc 1 71 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 24
 103              		@ frame_needed = 0, uses_anonymous_args = 0
  72:AmpSimp.cpp   ****     // Configure and Initialize the Daisy Seed
  73:AmpSimp.cpp   ****     // These are separate to allow reconfiguration of any of the internal
  74:AmpSimp.cpp   ****     // components before initialization.
  75:AmpSimp.cpp   ****     hardware.Configure();
 104              		.loc 1 75 5 view .LVU15
  71:AmpSimp.cpp   ****     // Configure and Initialize the Daisy Seed
 105              		.loc 1 71 1 is_stmt 0 view .LVU16
 106 0000 00B5     		push	{lr}
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109              		.loc 1 75 23 view .LVU17
 110 0002 1448     		ldr	r0, .L7
  71:AmpSimp.cpp   ****     // Configure and Initialize the Daisy Seed
 111              		.loc 1 71 1 view .LVU18
 112 0004 87B0     		sub	sp, sp, #28
 113              		.cfi_def_cfa_offset 32
 114              		.loc 1 75 23 view .LVU19
 115 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 116              	.LVL2:
  76:AmpSimp.cpp   ****     hardware.Init();
 117              		.loc 1 76 5 is_stmt 1 view .LVU20
 118              		.loc 1 76 18 is_stmt 0 view .LVU21
 119 000a 0021     		movs	r1, #0
 120 000c 1148     		ldr	r0, .L7
 121 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 122              	.LVL3:
  77:AmpSimp.cpp   ****     hardware.SetAudioBlockSize(4);
 123              		.loc 1 77 5 is_stmt 1 view .LVU22
 124              		.loc 1 77 31 is_stmt 0 view .LVU23
 125 0012 0421     		movs	r1, #4
 126 0014 0F48     		ldr	r0, .L7
 127 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 128              	.LVL4:
  78:AmpSimp.cpp   **** 
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 11


  79:AmpSimp.cpp   ****     //How many samples we'll output per second
  80:AmpSimp.cpp   ****     float samplerate = hardware.AudioSampleRate();
 129              		.loc 1 80 5 is_stmt 1 view .LVU24
 130              		.loc 1 80 48 is_stmt 0 view .LVU25
 131 001a 0E48     		ldr	r0, .L7
 132 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 133              	.LVL5:
  81:AmpSimp.cpp   **** 
  82:AmpSimp.cpp   ****     // spawn un tableau de n AdcChannelConfig pour n entrées
  83:AmpSimp.cpp   ****     // les init indépendament et les envoyer dans hardware.adc.init(&adccfg, n)
  84:AmpSimp.cpp   **** 
  85:AmpSimp.cpp   ****     //Create an ADC configuration
  86:AmpSimp.cpp   ****     AdcChannelConfig adcConfig;
 134              		.loc 1 86 5 is_stmt 1 view .LVU26
  87:AmpSimp.cpp   ****     //Add pin 21 as an analog input in this config. We'll use this to read the knob
  88:AmpSimp.cpp   ****     adcConfig.InitSingle(hardware.GetPin(16));
 135              		.loc 1 88 5 view .LVU27
 136              		.loc 1 88 25 is_stmt 0 view .LVU28
 137 0020 1020     		movs	r0, #16
 138 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 139              	.LVL6:
 140 0026 ADF80000 		strh	r0, [sp]	@ movhi
 141              		.loc 1 88 25 discriminator 1 view .LVU29
 142 002a 0222     		movs	r2, #2
 143 002c 0099     		ldr	r1, [sp]
 144 002e 01A8     		add	r0, sp, #4
 145 0030 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 146              	.LVL7:
  89:AmpSimp.cpp   **** 
  90:AmpSimp.cpp   ****     //Initialize the button on pin 28
  91:AmpSimp.cpp   ****     // button1.Init(hardware.GetPin(25), samplerate / 48.f);
  92:AmpSimp.cpp   ****     
  93:AmpSimp.cpp   ****     //Set the ADC to use our configuration
  94:AmpSimp.cpp   ****     hardware.adc.Init(&adcConfig, 1);
 147              		.loc 1 94 5 is_stmt 1 view .LVU30
 148              		.loc 1 94 22 is_stmt 0 view .LVU31
 149 0034 0423     		movs	r3, #4
 150 0036 0122     		movs	r2, #1
 151 0038 0748     		ldr	r0, .L7+4
 152 003a 0DEB0301 		add	r1, sp, r3
 153 003e FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 154              	.LVL8:
  95:AmpSimp.cpp   **** 
  96:AmpSimp.cpp   **** 
  97:AmpSimp.cpp   ****     //Start the adc
  98:AmpSimp.cpp   ****     hardware.adc.Start();
 155              		.loc 1 98 5 is_stmt 1 view .LVU32
 156              		.loc 1 98 23 is_stmt 0 view .LVU33
 157 0042 0548     		ldr	r0, .L7+4
 158 0044 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 159              	.LVL9:
  99:AmpSimp.cpp   **** 
 100:AmpSimp.cpp   ****     //Start calling the audio callback
 101:AmpSimp.cpp   ****     hardware.StartAudio(AudioCallback);
 160              		.loc 1 101 5 is_stmt 1 view .LVU34
 161              		.loc 1 101 24 is_stmt 0 view .LVU35
 162 0048 0449     		ldr	r1, .L7+8
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 12


 163 004a 0248     		ldr	r0, .L7
 164 004c FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
 165              	.LVL10:
 166              	.L5:
 102:AmpSimp.cpp   **** 
 103:AmpSimp.cpp   ****     // Loop forever
 104:AmpSimp.cpp   ****     for(;;) {}
 167              		.loc 1 104 5 is_stmt 1 view .LVU36
 168              		.loc 1 104 5 view .LVU37
 169              		.loc 1 104 5 view .LVU38
 170              		.loc 1 104 5 view .LVU39
 171 0050 FEE7     		b	.L5
 172              	.L8:
 173 0052 00BF     		.align	2
 174              	.L7:
 175 0054 00000000 		.word	hardware
 176 0058 18000000 		.word	hardware+24
 177 005c 00000000 		.word	_Z13AudioCallbackPKfPfj
 178              		.cfi_endproc
 179              	.LFE4675:
 181              		.section	.text.startup._GLOBAL__sub_I_hardware,"ax",%progbits
 182              		.align	1
 183              		.p2align 2,,3
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	_GLOBAL__sub_I_hardware:
 189              	.LFB5265:
 105:AmpSimp.cpp   **** }
 190              		.loc 1 105 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LBB77:
 196              	.LBI77:
 197              		.loc 1 105 1 view .LVU41
 198              	.LVL11:
 199              	.LBB78:
 200              	.LBB79:
 201              	.LBI79:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 202              		.loc 2 21 5 view .LVU42
 203              	.LBB80:
 204              	.LBB81:
 205              	.LBI81:
 206              		.file 7 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 13


  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 14


  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 15


 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 207              		.loc 7 166 5 view .LVU43
 208              	.LBB82:
 209              	.LBB83:
 210              		.loc 7 166 20 is_stmt 0 view .LVU44
 211 0000 0448     		ldr	r0, .L10
 212 0002 0023     		movs	r3, #0
 213              	.LBE83:
 214              	.LBE82:
 215              	.LBE81:
 216              	.LBE80:
 217              	.LBE79:
  30:AmpSimp.cpp   **** 
 218              		.loc 1 30 12 discriminator 1 view .LVU45
 219 0004 044A     		ldr	r2, .L10+4
 220 0006 0549     		ldr	r1, .L10+8
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 16


 221              	.LBB100:
 222              	.LBB99:
 223              	.LBB86:
 224              	.LBB85:
 225              	.LBB84:
 226              		.loc 7 166 20 view .LVU46
 227 0008 0360     		str	r3, [r0]
 228              	.LVL12:
 229              		.loc 7 166 20 view .LVU47
 230              	.LBE84:
 231              	.LBE85:
 232              	.LBE86:
 233              	.LBB87:
 234              	.LBI87:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 235              		.loc 6 95 5 is_stmt 1 view .LVU48
 236              	.LBB88:
 237              	.LBB89:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 238              		.loc 6 95 21 is_stmt 0 view .LVU49
 239 000a 4361     		str	r3, [r0, #20]
 240              	.LVL13:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 241              		.loc 6 95 21 view .LVU50
 242              	.LBE89:
 243              	.LBE88:
 244              	.LBE87:
 245              	.LBB90:
 246              	.LBI90:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 247              		.loc 5 109 5 is_stmt 1 view .LVU51
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 248              		.loc 5 109 5 is_stmt 0 view .LVU52
 249              	.LBE90:
 250              	.LBB91:
 251              	.LBI91:
 252              		.file 8 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 17


  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 18


  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 253              		.loc 8 84 5 is_stmt 1 view .LVU53
 254              	.LBB92:
 255              	.LBB93:
 256              		.loc 8 84 19 is_stmt 0 view .LVU54
 257 000c 0362     		str	r3, [r0, #32]
 258              	.LVL14:
 259              		.loc 8 84 19 view .LVU55
 260              	.LBE93:
 261              	.LBE92:
 262              	.LBE91:
 263              	.LBB94:
 264              	.LBI94:
  40:../../libDaisy//src/hid/usb.h **** 
 265              		.loc 4 40 5 is_stmt 1 view .LVU56
  40:../../libDaisy//src/hid/usb.h **** 
 266              		.loc 4 40 5 is_stmt 0 view .LVU57
 267              	.LBE94:
 268              	.LBB95:
 269              	.LBI95:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 270              		.loc 3 96 5 is_stmt 1 view .LVU58
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 271              		.loc 3 96 5 is_stmt 0 view .LVU59
 272              	.LBE95:
 273              	.LBB96:
 274              	.LBI96:
 275              		.file 9 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 19


  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 20


  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 276              		.loc 9 108 5 is_stmt 1 view .LVU60
 277              	.LBB97:
 278              	.LBB98:
 279              		.loc 9 108 19 is_stmt 0 view .LVU61
 280 000e C363     		str	r3, [r0, #60]
 281              	.LVL15:
 282              		.loc 9 108 19 view .LVU62
 283              	.LBE98:
 284              	.LBE97:
 285              	.LBE96:
 286              	.LBE99:
 287              	.LBE100:
  30:AmpSimp.cpp   **** 
 288              		.loc 1 30 12 discriminator 1 view .LVU63
 289 0010 FFF7FEBF 		b	__aeabi_atexit
 290              	.LVL16:
 291              	.L11:
 292              		.align	2
 293              	.L10:
 294 0014 00000000 		.word	hardware
 295 0018 00000000 		.word	__dso_handle
 296 001c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 297              	.LBE78:
 298              	.LBE77:
 299              		.cfi_endproc
 300              	.LFE5265:
 302              		.section	.init_array,"aw",%init_array
 303              		.align	2
 304 0000 00000000 		.word	_GLOBAL__sub_I_hardware(target1)
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 21


 305              		.global	dsp_data
 306              		.section	.bss.dsp_data,"aw",%nobits
 307              		.align	2
 310              	dsp_data:
 311 0000 00000000 		.space	4
 312              		.global	hardware
 313              		.section	.bss.hardware,"aw",%nobits
 314              		.align	2
 317              	hardware:
 318 0000 00000000 		.space	64
 318      00000000 
 318      00000000 
 318      00000000 
 318      00000000 
 319              		.text
 320              	.Letext0:
 321              		.file 10 "C:/msys64/ucrt64/arm-none-eabi/include/machine/_default_types.h"
 322              		.file 11 "C:/msys64/ucrt64/arm-none-eabi/include/sys/_stdint.h"
 323              		.file 12 "C:/msys64/ucrt64/arm-none-eabi/include/stdint.h"
 324              		.file 13 "C:/msys64/ucrt64/lib/gcc/arm-none-eabi/13.3.0/include/stddef.h"
 325              		.file 14 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cmath"
 326              		.file 15 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/bits/std_abs.h"
 327              		.file 16 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cstdlib"
 328              		.file 17 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cstdint"
 329              		.file 18 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/type_traits"
 330              		.file 19 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/debug/debug.h"
 331              		.file 20 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cstdarg"
 332              		.file 21 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cstdio"
 333              		.file 22 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cstring"
 334              		.file 23 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/cwchar"
 335              		.file 24 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/clocale"
 336              		.file 25 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/bits/stl_pair.h"
 337              		.file 26 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/bits/charconv.h"
 338              		.file 27 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/bits/predefined_ops.h"
 339              		.file 28 "C:/msys64/ucrt64/arm-none-eabi/include/sys/_types.h"
 340              		.file 29 "C:/msys64/ucrt64/arm-none-eabi/include/sys/reent.h"
 341              		.file 30 "C:/msys64/ucrt64/arm-none-eabi/include/sys/lock.h"
 342              		.file 31 "C:/msys64/ucrt64/arm-none-eabi/include/math.h"
 343              		.file 32 "C:/msys64/ucrt64/arm-none-eabi/include/stdlib.h"
 344              		.file 33 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/math.h"
 345              		.file 34 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/stdlib.h"
 346              		.file 35 "../../libDaisy//src/daisy_core.h"
 347              		.file 36 "C:/msys64/ucrt64/arm-none-eabi/include/c++/13.3.0/arm-none-eabi/thumb/v7e-m+dp/hard/bits
 348              		.file 37 "../../libDaisy//src/util/wav_format.h"
 349              		.file 38 "../../libDaisy//src/dev/max11300.h"
 350              		.file 39 "../../libDaisy//src/per/gpio.h"
 351              		.file 40 "../../libDaisy//src/dev/sdram.h"
 352              		.file 41 "C:/msys64/ucrt64/lib/gcc/arm-none-eabi/13.3.0/include/stdarg.h"
 353              		.file 42 "C:/msys64/ucrt64/arm-none-eabi/include/stdio.h"
 354              		.file 43 "C:/msys64/ucrt64/arm-none-eabi/include/string.h"
 355              		.file 44 "../../DaisySP//Source/Control/adenv.h"
 356              		.file 45 "../../DaisySP//Source/Utility/dsp.h"
 357              		.file 46 "C:/msys64/ucrt64/arm-none-eabi/include/wchar.h"
 358              		.file 47 "C:/msys64/ucrt64/arm-none-eabi/include/locale.h"
 359              		.file 48 "../../libDaisy//src/dev/sr_595.h"
 360              		.file 49 "<built-in>"
ARM GAS  C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 AmpSimp.cpp
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:20     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:68     .text._Z13AudioCallbackPKfPfj:00000000 $t
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:75     .text._Z13AudioCallbackPKfPfj:00000000 _Z13AudioCallbackPKfPfj
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:91     .text.startup.main:00000000 $t
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:98     .text.startup.main:00000000 main
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:175    .text.startup.main:00000054 $d
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:317    .bss.hardware:00000000 hardware
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:182    .text.startup._GLOBAL__sub_I_hardware:00000000 $t
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:188    .text.startup._GLOBAL__sub_I_hardware:00000000 _GLOBAL__sub_I_hardware
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:294    .text.startup._GLOBAL__sub_I_hardware:00000014 $d
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:303    .init_array:00000000 $d
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:310    .bss.dsp_data:00000000 dsp_data
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:307    .bss.dsp_data:00000000 $d
C:\Users\Benjamin\AppData\Local\Temp\ccLUqhTe.s:314    .bss.hardware:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
__aeabi_atexit
__dso_handle
